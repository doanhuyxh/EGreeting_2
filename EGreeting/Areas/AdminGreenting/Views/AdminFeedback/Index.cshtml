@model List<EGreeting.Models.Feedbacks>

@inject EGreeting.Services.VersionUpdate VersionUpdate

@{
    string version = VersionUpdate.Version();

    var count = 1;
}

<div id="vue_recharge">
    <h3>Feedback List</h3>
    <div class="table-responsive">
        <table class="table table-bordered" id="table_fb">
            <thead>
                <tr>
                    <th>
                        Number
                    </th>
                    <th>
                        User Name
                    </th>
                    <th>
                        Email
                    </th>
                    <th>
                       Phone number
                    </th>
                    <th>
                        Content
                    </th>
                    <th>

                        Creation date
                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @(count++)
                        </td>
                        <td>
                            @item.NameUser
                        </td>
                        <td>
                            @item.EmailUser
                        </td>
                        <td>
                            @item.PhoneNumber

                        </td>
                        <td>
                            @item.ContentFeedback

                        </td>
                        <td>
                            @item.CreateDate.ToString("dd/MM/yyyy")

                        </td>
                        <td style="width: fit-content">
                            <button type="button" class="btn btn-danger remove-fb" data-id="@item.IDFeedback" >Remove</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#table_fb').DataTable({
            'columnDefs': [{
                'targets': [-1],
                'orderable': false,
            }],
            searching: true,
            iDisplayLength: 7,
            "ordering": false,
            lengthChange: false,
            aaSorting: [[0, "desc"]],
           
        });
        $(".remove-fb").on("click", function () {
            const id = $(this).data("id");

            Swal.fire({
                title: 'Delete feedback',
                text: 'Are you sure you want to delete?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes',
                cancelButtonText: 'No!!!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#preloader').fadeIn();

                    const formData = new FormData();
                    formData.append('id', id);

                    axios.post('/admin/remove-feedback', formData, {
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        }
                    }).then(response => {
                        if (response.data.code == 200) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: 'Deleted successfully',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.reload();
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: `${response.data.message}`,
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    return;

                                }
                            });
                        }

                    }).catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred, please try again',
                            confirmButtonText: 'OK'
                        });
                    }).finally(() => {
                        $('#preloader').fadeOut();
                    });
                } else {
                    return;
                }
            });

        });
    });
</script>
